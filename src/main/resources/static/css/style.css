@import url('https://fonts.googleapis.com/css2?family=Amatic+SC:wght@700&family=Chilanka&display=swap');

body {
    background: url(../img/green_dust_scratch.png);
    font-family: 'Amatic SC', cursive;
}

#test {
    position: fixed;
    width: 1000px;
    height: 1000px;
    top: 300px;
    left: 0;
}

#board {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
}

.toggleVisibility {
    transition: 2s;
}

.toggleVisibility[visible="True"] {
    visibility: visible;
    background-color: rgba(0, 0, 0, 0.1);
}

.toggleVisibility[visible="False"] {
    visibility: hidden;
    background-color: rgba(0, 0, 0, 0);
}

.fullScreen {
    position: fixed;
    height: 100%;
    width: 100%;
    top: 0;
    left: 0;
    overflow: hidden;
}

.center {
    position: absolute;
    left: 50%;
    top: 50%;
}

input[type="text"], input[type="password"] {
    display: inline;
    border: green 2px solid;
    transition: background 1s,
    color 1s,
    border 1s;
    border-radius: 4px;
    outline: 0;
    font-family: 'Amatic SC', cursive;
    font-size: 16pt;
    height: 18pt;
    padding: 3px 8px;
}

input[type="text"]:focus, input[type="password"]:focus {
    border: lime 2px solid;
}

input[type="text"][invalid], input[type="password"][invalid] {
    border: red 2px solid;
    background-color: #f1dcdd;
}

input[type="button"] {
    display: inline;
    border: green 2px solid;
    transition: background 600ms,
    color 600ms,
    border 600ms;
    border-radius: 4px;
    outline: 0;
    font-family: 'Amatic SC', cursive;
    font-size: 16pt;
    padding: 1.5px 8px;
    color: white;
    background: green;
    cursor: pointer;
}

input[type="button"]:hover {
    background: white;
    color: green;
}

input[type="button"]:active {
    background: white;
    color: lime;
}

.toggleVisibility[visible="True"] .floatingBtn {
    top: 20px
}

.toggleVisibility[visible="False"] .floatingBtn {
    top: -100px
}

.floatingBtn {
    background-color: green;
    color: white;
    border-radius: 50px;
    text-align: center;
    box-shadow: 4px 4px 4px #999;
    transition: 600ms;
    cursor: pointer;
}

@media screen and (max-width: 400px) {
    .floatingBtn {
        margin: 10px 10px 0 0;
        width: 60px;
        height: 60px;
        font-size: 24pt;
    }

    .floatingBtn i::before {
        margin-top: 14px;
    }
}

@media screen and (min-width: 401px) {
    .floatingBtn {
        margin: 20px 20px 0 0;
        width: 80px;
        height: 80px;
        font-size: 29pt;
    }

    .floatingBtn i::before {
        margin-top: 21px;
    }
}

.floatingBtn:hover {
    background-color: white;
    color: green;
}

.floatingBtn[active] {
    background-color: white;
    color: green;
}

.buttonsBox {
    position: fixed;
    right: 0;
    display: flex;
    justify-content: flex-end;
    flex-direction: row-reverse;
    transition: 1s;
}

.blur {
    filter: blur(3px);
}

.dialogBox {
    padding: 18px;
    width: 90%;
    max-width: 300px;
    z-index: 10;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: url(../img/congruent_pentagon.png);
    box-shadow: 4px 4px 4px #999;
}

.dialogBox h1 {
    margin-top: 0;
    margin-bottom: 6px;
    text-align: center;
}

.dialogBox p {
    font-size: 16pt;
}

.dialogBox div {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
}

.dialogBox input[type=button] {
    margin: 1px 3px;
}

.bigFloatingDiv .si-label {
    width: 100%;
    margin-bottom: 12px;
}

/* custom properties (AKA css variables) */
.si {
    --color-label: black;
    --color-default: black;
    --color-active: green;
    --rotate-default: 180deg;
    --rotate-active: 40deg;
    --border-size-checkmark: 3px;
    --border-size-box: 2px;
    --input-size: 26px;
    --guter: 34px;
}

/* basic reset */
.si,
.si *,
.si *::before,
.si *::after {
    box-sizing: border-box;
}

/* label */
.si {
    cursor: pointer;
    position: relative;
}

.si .si-label {
    display: inline-block;
    padding-left: var(--guter);
    color: var(--color-label);
    vertical-align: text-top;
}

.si > input {
    display: none;
}

.si > input[type="checkbox"],

    /* change property values smoothly */
.si .si-label::before,
.si .si-label::after {
    transition: all 0.2s ease-in-out;
}

/* an element for both checkbox and radio */
.si .si-label::before {
    content: '';
    display: block;
    width: var(--input-size);
    height: var(--input-size);
    border: var(--border-size-box) solid var(--color-default);
    position: absolute;
    top: -3px;
    left: 0;
    transform: rotate(0deg) scale(1);
}

/* feedback when the user interacts with an element */
.si .si-label:hover::before {
    border-color: var(--color-active);
}

/* checkbox square */
.si.si-checkbox .si-label::before {
    border-radius: var(--border-size-checkmark);
}

/* checkbox checkmark */
.si.si-checkbox .si-label::after {
    content: '';
    display: block;
    width: 8px;
    height: 18px;
    border-width: 0 var(--border-size-checkmark) var(--border-size-checkmark) 0;
    border-style: solid;
    border-color: transparent var(--color-active) var(--color-active) transparent;
    position: absolute;
    top: -3px;
    left: 0;
    transform: rotate(var(--rotate-default)) scale(0);
}

/* checkbox square */
.si.si-checkbox > input:checked + .si-label::before {
    transform: rotate(var(--rotate-active)) scale(0);
}

/* checkmark */
.si.si-checkbox > input:checked + .si-label::after {
    left: 8px;
    transform: rotate(var(--rotate-active)) scale(1);
}

table {
    width: 100%;
    font-size: 18pt;
    border-collapse: collapse;
}

thead tr {
    font-weight: bold;
    border-bottom: 2px solid #000;
    text-align: left;
}

tbody tr {
    border-bottom: 1px solid #000;
    transition: background-color 0.2s;
}

tr td, th {
    padding: 2px 8px;
}

tr th:last-of-type, td:last-of-type {
    text-align: right;
}

tbody tr:hover {
    background-color: rgba(0, 0, 0, 0.06);
}